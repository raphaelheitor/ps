// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PremierTest.Infra.Data.Context;

namespace PremierTest.Infra.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210826163011_SeedDataBase")]
    partial class SeedDataBase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PremierTest.Domain.Entities.Equipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Equipes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Avengers"
                        });
                });

            modelBuilder.Entity("PremierTest.Domain.Entities.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Perfil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Funcionarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Matricula = "12345",
                            Nome = "Spider Man",
                            Password = "b7e94be513e96e8c45cd23d162275e5a12ebde9100a425c4ebcdd7fa4dcd897c",
                            Perfil = "colaborador"
                        },
                        new
                        {
                            Id = 2,
                            Matricula = "54321",
                            Nome = "Doctor Strange",
                            Password = "b7e94be513e96e8c45cd23d162275e5a12ebde9100a425c4ebcdd7fa4dcd897c",
                            Perfil = "colaborador"
                        },
                        new
                        {
                            Id = 3,
                            Matricula = "111",
                            Nome = "Ironman",
                            Password = "b7e94be513e96e8c45cd23d162275e5a12ebde9100a425c4ebcdd7fa4dcd897c",
                            Perfil = "gestor"
                        });
                });

            modelBuilder.Entity("PremierTest.Domain.Entities.FuncionarioEquipe", b =>
                {
                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<int>("EquipeId")
                        .HasColumnType("int");

                    b.HasKey("FuncionarioId", "EquipeId");

                    b.HasIndex("EquipeId");

                    b.ToTable("FuncionarioEquipes");
                });

            modelBuilder.Entity("PremierTest.Domain.Entities.HoraTrabalhada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<decimal>("Horas")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("ProjetoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("ProjetoId");

                    b.ToTable("HoraTrabalhadas");
                });

            modelBuilder.Entity("PremierTest.Domain.Entities.Projeto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EquipeId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("EquipeId");

                    b.ToTable("Projetos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Infinite War"
                        });
                });

            modelBuilder.Entity("PremierTest.Domain.Entities.FuncionarioEquipe", b =>
                {
                    b.HasOne("PremierTest.Domain.Entities.Equipe", "Equipe")
                        .WithMany("FuncionarioEquipe")
                        .HasForeignKey("EquipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PremierTest.Domain.Entities.Funcionario", "Funcionario")
                        .WithMany("FuncionarioEquipe")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PremierTest.Domain.Entities.HoraTrabalhada", b =>
                {
                    b.HasOne("PremierTest.Domain.Entities.Funcionario", "Colaborador")
                        .WithMany("HorasTrabalhadas")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PremierTest.Domain.Entities.Projeto", "Projeto")
                        .WithMany("HorasTrabalhadas")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PremierTest.Domain.Entities.Projeto", b =>
                {
                    b.HasOne("PremierTest.Domain.Entities.Equipe", "Equipe")
                        .WithMany("Projetos")
                        .HasForeignKey("EquipeId");
                });
#pragma warning restore 612, 618
        }
    }
}
